trigger:
  - master
  - release/*

variables:
  azureSubscription: 'AFS_Vendor_Portal'

  devWebAppName: 'vendorportalfeaps-dev'
  stagingWebAppName: 'vendorportalfeaps-staging'

  devEnvironmentName: 'vendorportalfeaps-dev'
  stagingEnvironmentName: 'vendorportalfeaps-staging'

  vmImageName: 'ubuntu-latest'

stages:
  - stage: Build
    displayName: Build and Test
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)

        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '16.x'
            displayName: 'Install Node.js'

          - script: |
              yarn
              yarn build
              yarn test
            displayName: 'yarn, build, test'
            env:
              NODE_OPTIONS: --max_old_space_size=16384

          - task: ArchiveFiles@2
            displayName: 'Archive files'
            inputs:
              rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
              includeRootFolder: false
              archiveType: zip
              archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
              replaceExistingArchive: true

          - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
            artifact: drop

  - stage: Deploy_Dev
    displayName: Deploy to Dev
    dependsOn: Build
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    jobs:
      - deployment: Deploy
        displayName: Deploy
        environment: $(devEnvironmentName)
        pool:
          vmImage: $(vmImageName)
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureWebApp@1
                  displayName: 'Azure Web App Deploy: $(devWebAppName)'
                  inputs:
                    azureSubscription: $(azureSubscription)
                    appType: webAppLinux
                    appName: $(devWebAppName)
                    package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
                    startUpCommand: 'yarn start'

  - stage: Deploy_Staging
    displayName: Deploy to Staging
    dependsOn: Build
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'))
    jobs:
      - deployment: Deploy
        displayName: Deploy
        environment: $(stagingEnvironmentName)
        pool:
          vmImage: $(vmImageName)
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureWebApp@1
                  displayName: 'Azure Web App Deploy: $(stagingWebAppName)'
                  inputs:
                    azureSubscription: $(azureSubscription)
                    appType: webAppLinux
                    appName: $(stagingWebAppName)
                    package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
                    startUpCommand: 'yarn start'
